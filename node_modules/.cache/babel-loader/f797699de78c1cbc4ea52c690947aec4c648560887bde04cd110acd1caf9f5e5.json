{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AGL\\\\Downloads\\\\WP-digitalization-frontend\\\\src\\\\components\\\\HookForm\\\\RHFSelect.jsx\",\n  _s = $RefreshSig$();\nimport PropTypes from \"prop-types\";\n// form\nimport { useFormContext, Controller } from \"react-hook-form\";\n// @mui\nimport { TextField } from \"@mui/material\";\n\n// ----------------------------------------------------------------------\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRHFSelect.propTypes = {\n  name: PropTypes.string,\n  native: PropTypes.bool,\n  children: PropTypes.node,\n  helperText: PropTypes.node,\n  maxHeight: PropTypes.number\n};\nexport function RHFSelect({\n  name,\n  native,\n  children,\n  helperText,\n  maxHeight = 220,\n  ...other\n}) {\n  _s();\n  const {\n    control\n  } = useFormContext();\n  return /*#__PURE__*/_jsxDEV(Controller, {\n    name: name,\n    control: control,\n    render: ({\n      field,\n      fieldState: {\n        error\n      }\n    }) => /*#__PURE__*/_jsxDEV(TextField, {\n      ...field,\n      select: true,\n      fullWidth: true,\n      SelectProps: {\n        native,\n        MenuProps: {\n          PaperProps: {\n            sx: {\n              ...(!native && {\n                px: 1,\n                maxHeight: typeof maxHeight === \"number\" ? maxHeight : \"unset\",\n                \"& .MuiMenuItem-root\": {\n                  px: 1,\n                  borderRadius: 0.75,\n                  typography: \"body2\",\n                  textTransform: \"capitalize\"\n                }\n              })\n            }\n          }\n        },\n        sx: {\n          textTransform: \"capitalize\"\n        }\n      },\n      error: !!error,\n      helperText: error ? error === null || error === void 0 ? void 0 : error.message : helperText,\n      ...other,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(RHFSelect, \"zyAxkz+Wq3InUdCKNlVVi99oElQ=\", false, function () {\n  return [useFormContext];\n});\n_c = RHFSelect;\nvar _c;\n$RefreshReg$(_c, \"RHFSelect\");","map":{"version":3,"names":["PropTypes","useFormContext","Controller","TextField","jsxDEV","_jsxDEV","RHFSelect","propTypes","name","string","native","bool","children","node","helperText","maxHeight","number","other","_s","control","render","field","fieldState","error","select","fullWidth","SelectProps","MenuProps","PaperProps","sx","px","borderRadius","typography","textTransform","message","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/AGL/Downloads/WP-digitalization-frontend/src/components/HookForm/RHFSelect.jsx"],"sourcesContent":["import PropTypes from \"prop-types\";\r\n// form\r\nimport { useFormContext, Controller } from \"react-hook-form\";\r\n// @mui\r\nimport { TextField } from \"@mui/material\";\r\n\r\n// ----------------------------------------------------------------------\r\n\r\nRHFSelect.propTypes = {\r\n  name: PropTypes.string,\r\n  native: PropTypes.bool,\r\n  children: PropTypes.node,\r\n  helperText: PropTypes.node,\r\n  maxHeight: PropTypes.number,\r\n};\r\n\r\nexport function RHFSelect({\r\n  name,\r\n  native,\r\n  children,\r\n  helperText,\r\n  maxHeight = 220,\r\n  ...other\r\n}) {\r\n  const { control } = useFormContext();\r\n\r\n  return (\r\n    <Controller\r\n      name={name}\r\n      control={control}\r\n      render={({ field, fieldState: { error } }) => (\r\n        <TextField\r\n          {...field}\r\n          select\r\n          fullWidth\r\n          SelectProps={{\r\n            native,\r\n            MenuProps: {\r\n              PaperProps: {\r\n                sx: {\r\n                  ...(!native && {\r\n                    px: 1,\r\n                    maxHeight:\r\n                      typeof maxHeight === \"number\" ? maxHeight : \"unset\",\r\n                    \"& .MuiMenuItem-root\": {\r\n                      px: 1,\r\n                      borderRadius: 0.75,\r\n                      typography: \"body2\",\r\n                      textTransform: \"capitalize\",\r\n                    },\r\n                  }),\r\n                },\r\n              },\r\n            },\r\n            sx: { textTransform: \"capitalize\" },\r\n          }}\r\n          error={!!error}\r\n          helperText={error ? error?.message : helperText}\r\n          {...other}\r\n        >\r\n          {children}\r\n        </TextField>\r\n      )}\r\n    />\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,YAAY;AAClC;AACA,SAASC,cAAc,EAAEC,UAAU,QAAQ,iBAAiB;AAC5D;AACA,SAASC,SAAS,QAAQ,eAAe;;AAEzC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEAC,SAAS,CAACC,SAAS,GAAG;EACpBC,IAAI,EAAER,SAAS,CAACS,MAAM;EACtBC,MAAM,EAAEV,SAAS,CAACW,IAAI;EACtBC,QAAQ,EAAEZ,SAAS,CAACa,IAAI;EACxBC,UAAU,EAAEd,SAAS,CAACa,IAAI;EAC1BE,SAAS,EAAEf,SAAS,CAACgB;AACvB,CAAC;AAED,OAAO,SAASV,SAASA,CAAC;EACxBE,IAAI;EACJE,MAAM;EACNE,QAAQ;EACRE,UAAU;EACVC,SAAS,GAAG,GAAG;EACf,GAAGE;AACL,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM;IAAEC;EAAQ,CAAC,GAAGlB,cAAc,CAAC,CAAC;EAEpC,oBACEI,OAAA,CAACH,UAAU;IACTM,IAAI,EAAEA,IAAK;IACXW,OAAO,EAAEA,OAAQ;IACjBC,MAAM,EAAEA,CAAC;MAAEC,KAAK;MAAEC,UAAU,EAAE;QAAEC;MAAM;IAAE,CAAC,kBACvClB,OAAA,CAACF,SAAS;MAAA,GACJkB,KAAK;MACTG,MAAM;MACNC,SAAS;MACTC,WAAW,EAAE;QACXhB,MAAM;QACNiB,SAAS,EAAE;UACTC,UAAU,EAAE;YACVC,EAAE,EAAE;cACF,IAAI,CAACnB,MAAM,IAAI;gBACboB,EAAE,EAAE,CAAC;gBACLf,SAAS,EACP,OAAOA,SAAS,KAAK,QAAQ,GAAGA,SAAS,GAAG,OAAO;gBACrD,qBAAqB,EAAE;kBACrBe,EAAE,EAAE,CAAC;kBACLC,YAAY,EAAE,IAAI;kBAClBC,UAAU,EAAE,OAAO;kBACnBC,aAAa,EAAE;gBACjB;cACF,CAAC;YACH;UACF;QACF,CAAC;QACDJ,EAAE,EAAE;UAAEI,aAAa,EAAE;QAAa;MACpC,CAAE;MACFV,KAAK,EAAE,CAAC,CAACA,KAAM;MACfT,UAAU,EAAES,KAAK,GAAGA,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEW,OAAO,GAAGpB,UAAW;MAAA,GAC5CG,KAAK;MAAAL,QAAA,EAERA;IAAQ;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EACX;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACpB,EAAA,CAjDeZ,SAAS;EAAA,QAQHL,cAAc;AAAA;AAAAsC,EAAA,GARpBjC,SAAS;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}